name: build

on:
  push:
    branches:
      - master
      - dev

jobs:
  # bsd:
  #   runs-on: macos-12
  #   name: A job to run test in FreeBSD
  #   # env:
  #   #   MYTOKEN : ${{ secrets.MYTOKEN }}
  #   #   MYTOKEN2: "value2"
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: FreeBSD-vm
  #     uses: vmactions/freebsd-vm@v0.3.1
  #     with:
  #       usesh: true
  #       prepare: |
  #         pkg install -y git gcc10 cmake-3.17 gmake mysql57-server gdb-9

  #       run: |
  #         pwd
  #         ls -lah
  #         whoami
  #         env
  #         freebsd-version
  #         mkdir workspace && cd workspace
  #         git clone https://github.com/mq1n/Diamas
  #         cd Diamas
  #         git submodule update --init --recursive
  #         git submodule update --recursive --remote
  #         chmod +x build.sh
  #         chmod +x rebuild.sh
  #         ./build.sh Debug
  #   - name: Collect outputs
  #     run: |
  #       mkdir _output
  #       cp Bin/auth_server _output
  #       cp Bin/db_cache _output
  #       cp Bin/game_server _output
  #       cp Bin/qc _output
  #       cp Bin/vrunner _output
  #   - name: Upload
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: output_bsd
  #       path: _output

  linux:
    timeout-minutes: 20

    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [g++-10, clang++]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install psutil
      # - name: Pull LFS
      #   run: |
      #     git lfs install
      #     git lfs pull
      - name: Compile tests
        working-directory: sql
        env:
          CXX: ${{ matrix.compiler }}
        run: |
          cmake -DBUILD_TESTING=1 ..
          make -j12
      - name: Collect outputs
        run: |
          mkdir _output
          cp Bin/auth_server _output
          cp Bin/db_cache _output
          cp Bin/game_server _output
          cp Bin/qc _output
          cp Bin/vrunner _output
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: output_nix
          path: _output
      - name: Run tests
        working-directory: sql
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: ctest --timeout 20 -C Debug -j12

  windows:
    timeout-minutes: 22

    strategy:
      matrix:
        os: [windows-2019]
        include:
          - os: windows-2019
            generator: Visual Studio 16 2019

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        submodules: true
        lfs: true
    - name: Compile tests
      working-directory: sql
      run: |
        cmake .. -A Win32 -DBUILD_TESTING=ON -DCI_BUILD=1 -DCMAKE_CXX_FLAGS=/W1 -G"${{ matrix.generator }}"
        cmake --build . -j 12
    - name: Collect outputs
      run: |
        mkdir _output
        copy Bin\*.exe _output
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        name: output_win
        path: _output
    - name: Run tests
      working-directory: sql
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest --timeout 22 -C Debug -j12
