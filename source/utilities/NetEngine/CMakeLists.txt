cmake_minimum_required(VERSION 3.2)
project(NetEngine)

# Preprocessor flags
if (WIN32)
	add_definitions(-DWIN32)
	add_definitions(-D_WIN32)
endif()

add_definitions(-DNOMINMAX)

# Output folder
set(OUTPUT_DIR ${PROJECT_SOURCE_DIR}/../../../Bin/Utilities)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${OUTPUT_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OUTPUT_DIR})

add_definitions(-DUSE_ASIO)
add_definitions(-D_WIN32_WINNT=0x0601)

file(GLOB NETENGINE_HEADERS
	"${PROJECT_SOURCE_DIR}/include/*.hpp"
)
file(GLOB NETENGINE_SOURCES
	"${PROJECT_SOURCE_DIR}/src/*.cpp"
)

add_library(${PROJECT_NAME} STATIC ${NETENGINE_HEADERS} ${NETENGINE_SOURCES})
target_link_libraries(${PROJECT_NAME} cryptopp)

set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)
set_property(TARGET ${PROJECT_NAME} PROPERTY CMAKE_CXX_EXTENSIONS OFF)

option(NETENGINE_BUILD_TEST "Build the network engine test binaries" ON)
if(NETENGINE_BUILD_TEST AND WIN32)
	include_directories(include)

	file(GLOB NETENGINE_TEST_HEADERS
		"${PROJECT_SOURCE_DIR}/test/*.hpp"
	)
	file(GLOB NETENGINE_TEST_SOURCES
		"${PROJECT_SOURCE_DIR}/test/*.cpp"
	)

	add_executable(${PROJECT_NAME}_Test ${NETENGINE_HEADERS} ${NETENGINE_TEST_SOURCES} ${NETENGINE_TEST_HEADERS})
	target_link_libraries(${PROJECT_NAME}_Test ${PROJECT_NAME})
endif()

#install(TARGETS ${PROJECT_NAME}
#		RUNTIME DESTINATION bin
#		LIBRARY DESTINATION lib
#		ARCHIVE DESTINATION lib
#)
#install(FILES ${NETENGINE_HEADERS} DESTINATION include)
